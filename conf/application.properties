
#security basique
#security.user.name=admin
#security.user.password=123
#spring.config.location=file:C:/Outil-de-developpement/apache-tomcat-8.0.33/conf/application.properties


logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=ERROR
#logging.path=c:/logEShopper.txt
#creer le fichier log dans le dossier logs de tompcat (tomcat c'est un conteneur)
#logging.file=../logs/log-EShopper.txt
logging.file=${catalina.home}/logs/logEShopper.txt


# DataSource setting
#spring.datasource.url = jdbc:mysql://localhost:3306/MA_BASE
#spring.datasource.username =root
#spring.datasource.password =
#spring.datasource.url = jdbc:mysql://10.66.52.103:3306/MA_BASE
#spring.datasource.username =root
#spring.datasource.password =master
#spring.datasource.driver-class-name= com.mysql.jdbc.Driver
spring.datasource.jndi-name=java:comp/env/jdbc/eShopperBase

#il faut ajouter dans le fichier de server.xml la balise de configuration de jndi c'est entre <GlobalNamingResources>...</GlobalNamingResources>
#<Resource name="jdbc/MA_BASE" auth="Container" type="javax.sql.DataSource"
#               maxActive="100" maxIdle="30" maxWait="10000"
#               username="root" password="" driverClassName="com.mysql.jdbc.Driver"
#               url="jdbc:mysql://localhost:3306/MA_BASE"/>
 
#dans le fichier context.xml dans /conf de tomcat il faut ajouter cette balise like qui fait le cablage entre spring et Tomcat
#<ResourceLink name="jdbc/eShopperBase"
#                global="jdbc/MA_BASE"
#                auth="Container"
#                type="javax.sql.DataSource" />

#pour finir il faut ajouter dans le lib de tomcat le fichier jdbc.mysql.jar
#sur eclipse les fichier de configuration de tomcat sont dans le dossier Servers extern du projet

#ne pas affichier l'icon de spring au demarrage
#spring.main.banner-mode=off
#spring.config.location="chemin"
#spring.config.location=java:comp/env/jdbc/configLocation

# desactiv� le serveur embarqu� spring 
#spring.main.web-environment=false

# Sperify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query 
spring.jpa.show-sql = false
#Hibernate ddl auto (create , create-drop , update )
spring.jpa.hibernate.ddl-auto= none
# naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# remplir la base de donnee avec le fichier data.sql 
spring.datasource.initialize= true
spring.datasource.init-sql=

# parametrage pour envoie de mail au client
#spring.mail.jndi-name=java:/comp/env/mail/Session
spring.mail.host=smtp.gmail.com
spring.mail.username=test@gmail.com
spring.mail.password=Reservation123

spring.mail.port=465
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port =465
spring.mail.properties.mail.smtp.socketFactory.class =javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallBack = false

#spring.mail.jndi-name=java:/comp/env/mail/eShopperMail
#dans le fichier server.xml ajouter la config pour jndi mail , il faut ajouter aussi le fichier javax.mail-1.5.5.jar dans les /lib de tomcat
#<Resource name="mail/eShopperMail" auth="Container"
#			type="javax.mail.Session" 
#			mail.smtp.host="smtp.gmail.com" 
#			mail.smtp.port="465"
#			mail.smtp.auth="true"
#			mail.smtp.starttls.enable="true"
#			mail.smtp.socketFactory.class="javax.net.ssl.SSLSocketFactory"
#			mail.smtp.socketFactory.fallBack="false"
#			mail.smtp.user="test@gmail.com"
#			password="Reservation123" 
#			mail.debug="true" />


#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true

######################################################################## 
# parametrage de paypal

